generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DatabaseURI")
}

model Accounts {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String   @unique
  createdAt DateTime @default(now())

  isActive Boolean @default(false)

  messageState        Int @default(0)
  friendRequestState  Int @default(0)
  commentHistoryState Int @default(0)

  youtube String?
  twitter String?
  twitch  String?

  modBadge Int @default(0)
}

model Users {
  id       Int    @id @default(autoincrement())
  extId    String @unique
  username String @default("Player")

  isRegistered    Boolean @default(false)
  isBanned        Boolean @default(false)
  isCreatorBanned Boolean @default(false)

  orbs          Int @default(0)
  stars         Int @default(0)
  moons         Int @default(0)
  coins         Int @default(0)
  diamonds      Int @default(0)
  userCoins     Int @default(0)
  demons        Int @default(0)
  creatorPoints Int @default(0)
  special       Int @default(0)

  displayIcon     Int     @default(0)
  displayIconType Int     @default(0)
  cube            Int     @default(1)
  ship            Int     @default(1)
  ball            Int     @default(1)
  ufo             Int     @default(1)
  wave            Int     @default(1)
  robot           Int     @default(1)
  spider          Int     @default(1)
  swing           Int     @default(1)
  jetpack         Int     @default(1)
  explosion       Int     @default(1)
  glow            Boolean @default(false)

  mainColor   Int @default(0)
  secondColor Int @default(3)
  glowColor   Int @default(-1)

  totalSmallChests Int       @default(0)
  lastSmallChest   DateTime?
  totalBigChests   Int       @default(0)
  lastBigChest     DateTime?
}

model AccountComments {
  id        Int      @id @default(autoincrement())
  accountId Int
  content   String
  createdAt DateTime @default(now())
  likes     Int      @default(0)
  isSpam    Boolean  @default(false)
}

model FriendRequests {
  id          Int      @id @default(autoincrement())
  accountId   Int
  toAccountId Int
  comment     String?
  isNew       Boolean  @default(true)
  createdAt   DateTime @default(now())

  @@unique([accountId, toAccountId])
}

model Friends {
  id         Int     @id @default(autoincrement())
  accountId1 Int
  accountId2 Int
  isNewFor1  Boolean @default(true)
  isNewFor2  Boolean @default(true)

  @@unique([accountId1, accountId2])
}

model Blocks {
  id              Int @id @default(autoincrement())
  accountId       Int
  targetAccountId Int

  @@unique([accountId, targetAccountId])
}

model Messages {
  id          Int      @id @default(autoincrement())
  accountId   Int
  toAccountId Int
  subject     String
  content     String
  isNew       Boolean  @default(true)
  createdAt   DateTime @default(now())
}

model Levels {
  id               Int             @id @default(autoincrement())
  gameVersion      Int
  binaryVersion    Int             @default(0)
  accountId        Int
  name             String
  description      String?
  version          Int             @default(1)
  length           LevelLength     @default(Tiny)
  officialSongId   Int             @default(0)
  songId           Int             @default(0)
  objectCount      Int             @default(0)
  password         String          @default("0")
  originalLevelId  Int             @default(0)
  coins            Int             @default(0)
  requestedStars   Int
  stars            Int             @default(0)
  visibility       LevelVisibility @default(Listed)
  editorTime       Int             @default(0)
  editorTimeCopies Int             @default(0)
  extraString      String?

  ratingType LevelRating?
  difficulty LevelDifficulty @default(NA)
  likes      Int             @default(0)
  dislikes   Int             @default(0)
  downloads  Int             @default(0)
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  ratedAt    DateTime?

  isLDM       Boolean @default(false)
  isTwoPlayer Boolean @default(false)
  isAuto      Boolean @default(false)

  @@unique([accountId, name])
}

enum LevelRating {
  Featured
  Epic
  Legendary
  Mythic
}

enum LevelDifficulty {
  NA
  Auto
  Easy
  Normal
  Hard
  Harder
  Insane
  EasyDemon
  MediumDemon
  HardDemon
  InsaneDemon
  ExtremeDemon
}

enum LevelLength {
  Tiny
  Short
  Medium
  Long
  XL
  Platformer
}

enum LevelVisibility {
  Listed
  FriendsOnly
  Unlisted
}

model LevelsData {
  id   Int    @id
  data String
}

model SavedData {
  id Int @id

  data          String
  gameVersion   Int
  binaryVersion Int
}
